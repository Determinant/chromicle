{"version":3,"sources":["Logo.js","theme.js","gapi.js","msg.js","pattern.js","Chart.js","RegexField.js","PatternTable.js","Snackbar.js","Dialog.js","CustomAnalyzer.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["Logo","props","react_default","a","createElement","xmlns","viewBox","version","style","id","transform","points","fill","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","fontFamily","theme","createMuiTheme","palette","primary","light","orange","main","dark","contrastText","typography","useNextVariants","gapi_base","GApiError","Object","freeze","invalidSyncToken","Symbol","notLoggedIn","notLoggedOut","otherError","to_params","dict","entries","filter","_ref","_ref2","slicedToArray","map","_ref3","_ref4","k","v","concat","encodeURIComponent","join","loggedIn","_getAuthToken","interactive","arguments","length","undefined","Promise","resolver","chrome","identity","getAuthToken","token","runtime","lastError","then","_ref5","_ref6","getLoggedIn","catch","resolve","b","logout","fetch","method","async","response","status","removeCachedAuthToken","_removeCachedAuthToken","getCalendars","access_token","json","data","items","getColors","_updatePatterns","_getPatterns","_updateCalendars","_getCalendars","_getCalEvents","msgType","updatePatterns","getPatterns","updateCalendars","getCalEvents","stringifyMsgType","mt","console","error","Msg","type","classCallCheck","this","createClass","key","value","inflate","obj","s","parseMsgType","MsgClient","channelName","_this","sendMsg","cb","rcb","requestCallback","pm","ids","pop","maxId","inFlight","port","postMessage","deflate","connect","name","onMessage","addListener","msg","log","assert","push","Pattern","isRegex","label","get","RegExp","emptyPattern","anyPattern","revive","PatternEntry","idx","calPattern","eventPattern","cal","event","defaultPatternEntry","customizedLabel","cx","cy","x","y","anchor","dx","dy","textAnchor","withStyles","pieChart","margin","Grid_default","container","spacing","item","xs","lg","className","classes","patternTableWrapper","PieChart","width","height","Pie","patternGraphData","dataKey","outerRadius","deepOrange","Tooltip","formatter","toFixed","calendarGraphData","innerRadius","cyan","d","i","Cell","color","RegexField","pitems","options","p0","isEmpty","MenuItem_default","fieldRegex","fieldNoRegex","FormControl_default","Select_default","onChange","target","TextField_default","React","Component","RegexFieldWithStyles","marginRight","patternHead","field","elem","TextField","withTheme","calendars","any","PatternTable","state","page","rowsPerPage","activePattern","handleChangePage","setState","handleChangeRowsPerPage","_this2","_this$props","patterns","_this$state","nDummy","Math","min","rows","slice","p","TableRow_default","onMouseOver","onMouseOut","CustomText","TableCell_default","onUpdatePattern","deleteButtonShow","deleteButtonHide","DeleteOutlined_default","deleteIcon","onClick","onRemovePattern","Table_default","patternTable","TableHead_default","TableBody_default","colSpan","TablePagination_default","rowsPerPageOptions","component","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","position","right","display","cursor","overflowX","overflowY","minWidth","variantIcon","ErrorIcon","warning","WarningIcon","backgroundColor","amber","icon","iconVariant","opacity","unit","message","alignItems","variant","open","onClose","other","objectWithoutProperties","Icon","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","close","Close_default","Transition","Slide_default","direction","AlertDialog","Dialog_default","TransitionComponent","keepMounted","handleClose","aria-labelledby","DialogTitle_default","title","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","default_chart_data","CustomAnalyzer","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","snackBarOpen","snackBarMsg","snackBarVariant","dialogOpen","dialogMsg","updatePattern","msgClient","removePattern","splice","newPattern","toConsumableArray","loadPatterns","start","end","getTime","e","Date","analyze","startOf","toDate","event_pms","cals","_loop","calName","regex","test","filterPatterns","r","events","all","all_events","results","cal_results","forEach","_loop2","summary","hasOwnProperty","duration","background","handleSnackbarOpen","reset","handleDialogOpen","ans","default","keys","handleSnackbarClose","reason","dialogPromiseResolver","handleDialogClose","result","enabledOnly","gapi","src_Dialog","src_Snackbar","md","fullWidth","FormGroup_default","Typography_default","gutterBottom","marginBottom","marginLeft","AddCircle_default","src_PatternTable","textAlign","react_dates","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","isOutsideRange","buttonSpacer","Chart","STableCell","body","TableCell","CompactListItem","dense","paddingTop","paddingBottom","ListItem","Settings","isLoggedIn","handleLogin","loadAll","handleLogout","handleToggleCalendar","objectSpread","enabled","loadDefaultPatterns","colors","calendar","colorId","loadCalendars","tableHead","tableContent","disabled","Refresh_default","List_default","calendarList","disableGutters","button","Checkbox_default","checked","disableRipple","ListItemText_default","verticalAlign","lineHeight","maxWidth","maxHeight","styles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","flexGrow","appBarSpacer","mixins","toolbar","content","padding","overflow","indicator","DashboardTabs","handleChangeTab","currentTab","history","AppBar_default","Toolbar_default","noWrap","Tabs_default","location","pathname","Tab_default","Link","to","CssBaseline_default","Route","exact","path","render","Redirect","Dashboard","Tabs","withRouter","core_styles","HashRouter","Boolean","window","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5c342f4.chunk.js","sourcesContent":["import React from 'react';\nexport default (props) =>\n  <svg\n     xmlns=\"http://www.w3.org/2000/svg\"\n     viewBox=\"0 0 98.905998 93.557997\"\n     version=\"1.1\"\n     style={props.style}>\n    <g id=\"g13\"\n       transform=\"translate(-153.533,-203.047)\">\n      <g id=\"g29\">\n        <g\n           id=\"g27\">\n          <polygon\n             id=\"polygon7\"\n             points=\"252.439,241.924 234.556,288.703 185.103,296.605 153.533,257.728 171.416,210.949 220.869,203.047 \"\n             style={{fill: '#ff8000'}} />\n          <g\n             id=\"g11\"\n             transform=\"translate(167.24355,224.20734)\">\n            <text\n               id=\"text9\"\n                style={{fontStyle:'normal',\n                    fontVariant:'normal',\n                    fontWeight:'normal',\n                    fontStretch:'normal',\n                    fontSize:75,\n                    fontFamily:'TypoPRO Fantasque Sans Mono',\n                    fill:'#ffeade'}}\n               transform=\"translate(0.586,49.072)\">Cr</text>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: orange[300],\n            main: orange[500],\n            dark: orange[700],\n            contrastText: \"#fff\"\n        }\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nexport default theme;\n","/* global chrome */\nimport LRU from \"lru-cache\";\nconst gapi_base = 'https://www.googleapis.com/calendar/v3';\n\nconst GApiError = Object.freeze({\n    invalidSyncToken: Symbol(\"invalidSyncToken\"),\n    notLoggedIn: Symbol(\"notLoggedIn\"),\n    notLoggedOut: Symbol(\"notLoggedOut\"),\n    otherError: Symbol(\"otherError\"),\n});\n\nfunction to_params(dict) {\n    return Object.entries(dict).filter(([k, v]) => v).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n}\n\nlet loggedIn = null;\n\nfunction _getAuthToken(interactive = false) {\n    return new Promise(resolver =>\n        chrome.identity.getAuthToken(\n            { interactive }, token => resolver([token, !chrome.runtime.lastError])))\n            .then(([token, ok]) => {\n                if (ok) return token;\n                else throw GApiError.notLoggedIn;\n            });\n}\n\nfunction _removeCachedAuthToken(token) {\n    return new Promise(resolver =>\n        chrome.identity.removeCachedAuthToken({ token }, () => resolver()));\n}\n\nexport function getLoggedIn() {\n    if (loggedIn === null)\n    {\n        return _getAuthToken(false)\n            .then(() => loggedIn = true)\n            .catch(() => loggedIn = false)\n            .then(() => loggedIn);\n    }\n    else return Promise.resolve(loggedIn);\n}\n\nexport function getAuthToken() {\n    return getLoggedIn().then(b => {\n        if (b) return _getAuthToken(false);\n        else throw GApiError.notLoggedIn;\n    });\n}\n\nexport function login() {\n    return getLoggedIn().then(b => {\n        if (!b) return _getAuthToken(true).then(() => loggedIn = true);\n        else throw GApiError.notLoggedOut;\n    });\n}\n\nexport function logout() {\n    return getAuthToken().then(token => {\n        return fetch(`https://accounts.google.com/o/oauth2/revoke?${to_params({ token })}`,\n                    { method: 'GET', async: true }).then(response => {\n            if (response.status === 200)\n                return _removeCachedAuthToken(token);\n            else throw GApiError.otherError;\n        });\n    }).then(() => loggedIn = false);\n}\n\nexport function getCalendars(token) {\n    return fetch(`${gapi_base}/users/me/calendarList?${to_params({access_token: token})}`,\n            { method: 'GET', async: true })\n        .then(response => response.json())\n        .then(data => data.items);\n}\n\nexport function getColors(token) {\n    return fetch(`${gapi_base}/colors?${to_params({access_token: token})}`,\n        { method: 'GET', async: true })\n        .then(response => response.json());\n}\n\nfunction getEvent(calId, eventId, token) {\n    return fetch(`${gapi_base}/calendars/${calId}/events/${eventId}?${to_params({access_token: token})}`,\n        { method: 'GET', async: true })\n        .then(response => response.json());\n}\n\nfunction getEvents(calId, token, syncToken=null, timeMin=null, timeMax=null, resultsPerRequest=100) {\n    let results = [];\n    const singleFetch = (pageToken, syncToken) => fetch(`${gapi_base}/calendars/${calId}/events?${to_params({\n            access_token: token,\n            pageToken,\n            syncToken,\n            timeMin,\n            timeMax,\n            maxResults: resultsPerRequest\n        })}`, { method: 'GET', async: true })\n            .then(response => {\n                if (response.status === 200)\n                    return response.json();\n                else if (response.status === 410)\n                    throw GApiError.invalidSyncToken;\n                else throw GApiError.otherError;\n            })\n            .then(data => {\n                results.push(...data.items);\n                if (data.nextPageToken) {\n                    return singleFetch(data.nextPageToken, '');\n                } else {\n                    return ({\n                        nextSyncToken: data.nextSyncToken,\n                        results\n                    });\n                }\n            })\n\n    return singleFetch('', syncToken);\n}\n\nexport class GCalendar {\n    constructor(calId, name, options={maxCachedItems: 100, nDaysPerSlot: 10, largeQuery: 10}) {\n        this.calId = calId;\n        this.name = name;\n        this.syncToken = '';\n        this.cache = new LRU({\n            max: options.maxCachedItems,\n            dispose: (k, v) => this.onRemoveSlot(k, v)\n        });\n        this.eventMeta = {};\n        this.options = options;\n        this.divider = 8.64e7 * this.options.nDaysPerSlot;\n    }\n\n    get token() { return getAuthToken(); }\n\n    dateToCacheKey(date) {\n        return Math.floor(date / this.divider);\n    }\n\n    dateRangeToCacheKeys(range) {\n        return {\n            start: this.dateToCacheKey(range.start),\n            end: this.dateToCacheKey(new Date(range.end.getTime() - 1))\n        };\n    }\n\n    getSlot(k) {\n        if (!this.cache.has(k))\n        {\n            let res = {};\n            this.cache.set(k, res);\n            return res;\n        }\n        else return this.cache.get(k);\n    }\n\n    onRemoveSlot(k, v) {\n        for (let id in v) {\n            console.assert(this.eventMeta[id]);\n            let keys = this.eventMeta[id].keys;\n            keys.delete(k);\n            if (keys.size === 0)\n                delete this.eventMeta[id];\n        }\n    }\n\n    slotStartDate(k) { return new Date(k * this.divider); }\n    slotEndDate(k) { return new Date((k + 1) * this.divider); }\n\n    addEvent(e, evict = false) {\n        //console.log('adding event', e);\n        if (this.eventMeta.hasOwnProperty(e.id))\n            this.removeEvent(e);\n        let r = this.dateRangeToCacheKeys(e);\n        let ks = r.start;\n        let ke = r.end;\n        let t = this.cache.length;\n        let keys = new Set();\n        for (let i = ks; i <= ke; i++)\n        {\n            keys.add(i);\n            if (!this.cache.has(i)) t++;\n        }\n        this.eventMeta[e.id] = {\n            keys,\n            summary: e.summary,\n        };\n        if (!evict && t > this.options.maxCachedItems) return;\n        if (ks === ke)\n            this.getSlot(ks)[e.id] = {\n                start: e.start,\n                end: e.end,\n                id: e.id };\n        else\n        {\n            this.getSlot(ks)[e.id] = {\n                start: e.start,\n                end: this.slotEndDate(ks),\n                id: e.id };\n            this.getSlot(ke)[e.id] = {\n                start: this.slotStartDate(ke),\n                end: e.end,\n                id: e.id };\n            for (let k = ks + 1; k < ke; k++)\n                this.getSlot(k)[e.id] = {\n                    start: this.slotStartDate(k),\n                    end: this.slotEndDate(k),\n                    id: e.id};\n        }\n    }\n\n    removeEvent(e) {\n        let keys = this.eventMeta[e.id].keys;\n        console.assert(keys);\n        keys.forEach(k => delete this.getSlot(k)[e.id]);\n        delete this.eventMeta[e.id];\n    }\n\n    getSlotEvents(k, start, end) {\n        let s = this.getSlot(k);\n        //console.log(s);\n        let results = [];\n        for (let id in s) {\n            if (!(s[id].start >= end || s[id].end <= start))\n            {\n                results.push({\n                    id,\n                    start: s[id].start < start ? start: s[id].start,\n                    end: s[id].end > end ? end: s[id].end,\n                    summary: this.eventMeta[id].summary\n                });\n            }\n        }\n        return results;\n    }\n\n    getCachedEvents(_r) {\n        let r = this.dateRangeToCacheKeys(_r);\n        let ks = r.start;\n        let ke = r.end;\n        let results = this.getSlotEvents(ks, _r.start, _r.end);\n        for (let k = ks + 1; k < ke; k++)\n        {\n            let s = this.getSlot(k);\n            for (let id in s)\n                results.push(s[id]);\n        }\n        if (ke > ks)\n            results.push(...this.getSlotEvents(ke, _r.start, _r.end));\n        return results;\n    }\n\n    sync() {\n        return this.token.then(token => getEvents(this.calId, token, this.syncToken).then(r => {\n            let pms = r.results.map(e => e.start ? Promise.resolve(e) : getEvent(this.calId, e.id, token));\n            return Promise.all(pms).then(results => {\n                results.forEach(e => {\n                    e.start = new Date(e.start.dateTime);\n                    e.end = new Date(e.end.dateTime);\n                    if (e.status === 'confirmed')\n                        this.addEvent(e);\n                    else if (e.status === 'cancelled')\n                        this.removeEvent(e);\n                });\n                this.syncToken = r.nextSyncToken;\n            });\n        })).catch(e => {\n            if (e === GApiError.invalidSyncToken) {\n                this.syncToken = '';\n                this.sync();\n            } else throw e;\n        });\n    }\n\n    getEvents(start, end) {\n        let r = this.dateRangeToCacheKeys({ start, end });\n        let query = {};\n        for (let k = r.start; k <= r.end; k++)\n            if (!this.cache.has(k))\n            {\n                if (!query.hasOwnProperty('start'))\n                    query.start = k;\n                query.end = k;\n            }\n        console.log(`start: ${start} end: ${end}`);\n        if (query.hasOwnProperty('start'))\n        {\n            console.assert(query.start <= query.end);\n            if (query.end - query.start + 1 > this.options.largeQuery) {\n                console.log(`encounter large query, use direct fetch`);\n                return this.token.then(token => getEvents(this.calId, token, null,\n                        start.toISOString(), end.toISOString()).then(r => {\n                    let results = [];\n                    r.results.forEach(e => {\n                        console.assert(e.start);\n                        e.start = new Date(e.start.dateTime);\n                        e.end = new Date(e.end.dateTime);\n                        results.push(e);\n                    });\n                    return results.filter(e => !(e.start >= end || e.end <= start)).map(e => {\n                        return {\n                            id: e.id,\n                            start: e.start < start ? start: e.start,\n                            end: e.end > end ? end: e.end,\n                            summary: e.summary,\n                        };\n                    });\n                }));\n            }\n\n            console.log(`fetching short event list`);\n            return this.token.then(token => getEvents(this.calId, token, null,\n                this.slotStartDate(query.start).toISOString(),\n                this.slotEndDate(query.end).toISOString()).then(r => {\n                    r.results.forEach(e => {\n                        if (e.status === 'confirmed')\n                        {\n                            console.assert(e.start);\n                            e.start = new Date(e.start.dateTime);\n                            e.end = new Date(e.end.dateTime);\n                            this.addEvent(e, true);\n                        }\n                    });\n                    if (this.syncToken === '')\n                        this.syncToken = r.nextSyncToken;\n                })).then(() => this.sync())\n                .then(() => this.getCachedEvents({ start, end }));\n        }\n        else\n        {\n            console.log(`cache hit`);\n            return this.sync().then(() => this.getCachedEvents({ start, end }));\n        }\n    }\n}\n","/* global chrome */\nconst _updatePatterns = \"updatePatterns\";\nconst _getPatterns = \"getPatterns\";\nconst _updateCalendars = \"updateCalendars\";\nconst _getCalendars = \"getCalendars\";\nconst _getCalEvents = \"getCalEvents\";\n\nexport const msgType = Object.freeze({\n    updatePatterns: Symbol(_updatePatterns),\n    getPatterns: Symbol(_getPatterns),\n    updateCalendars: Symbol(_updateCalendars),\n    getCalendars: Symbol(_getCalendars),\n    getCalEvents: Symbol(_getCalEvents),\n});\n\nfunction stringifyMsgType(mt) {\n    switch (mt) {\n        case msgType.updatePatterns: return _updatePatterns;\n        case msgType.getPatterns: return _getPatterns;\n        case msgType.updateCalendars: return _updateCalendars;\n        case msgType.getCalendars: return _getCalendars;\n        case msgType.getCalEvents: return _getCalEvents;\n        default: console.error(\"unreachable\");\n    }\n}\n\nfunction parseMsgType(s) {\n    switch(s) {\n        case _updatePatterns: return msgType.updatePatterns;\n        case _getPatterns: return msgType.getPatterns;\n        case _updateCalendars: return msgType.updateCalendars;\n        case _getCalendars: return msgType.getCalendars;\n        case _getCalEvents: return msgType.getCalEvents;\n        default: console.error(\"unreachable\");\n    }\n}\n\nexport class Msg {\n    constructor(id, type, data) {\n        this.id = id;\n        this.type = type;\n        this.data = data;\n    }\n    genResp(data) { return new Msg(this.id, this.type, data); }\n    deflate() {\n        return {\n            id: this.id,\n            type: stringifyMsgType(this.type),\n            data: this.data\n        }\n    }\n    static inflate = obj => new Msg(obj.id, parseMsgType(obj.type), obj.data);\n}\n\nexport class MsgClient {\n    constructor(channelName) {\n        let port = chrome.runtime.connect({name: channelName});\n        const getCallBack = rcb => this.requestCallback;\n        port.onMessage.addListener(function(msg) {\n            console.log(msg);\n            let rcb = getCallBack(msg.type);\n            let cb = rcb.inFlight[msg.id];\n            console.assert(cb !== undefined);\n            rcb.ids.push(msg.id);\n            cb(msg);\n        });\n        this.port = port;\n        this.requestCallback = {inFlight: {}, ids: [], maxId: 0};\n    }\n\n    sendMsg = ({ type, data }) => {\n        let rcb = this.requestCallback;\n        let cb;\n        let pm = new Promise(resolve => { cb = resolve; });\n        let id;\n        if (rcb.ids.length > 0) {\n            id = rcb.ids.pop();\n        } else {\n            id = rcb.maxId++;\n        }\n        rcb.inFlight[id] = cb;\n        this.port.postMessage((new Msg(id, type, data)).deflate());\n        return pm;\n    }\n}\n","export class Pattern {\n    constructor(id, isRegex, value, label) {\n        this.id = id;\n        this.isRegex = isRegex;\n        this.value = value;\n        this.label = label;\n    }\n\n    get regex() { return new RegExp(this.isRegex ? this.value : `^${this.value}$`); }\n    get isEmpty() { return this.label === null; }\n    static emptyPattern = () => new Pattern(0, true, '', null);\n    static anyPattern = () => new Pattern('any', true, '.*', 'Any');\n    static revive = obj => new Pattern(obj.id, obj.isRegex, obj.value, obj.label);\n}\n\nexport class PatternEntry {\n    constructor(name, idx, calPattern, eventPattern) {\n        this.name = name;\n        this.idx = idx;\n        this.cal = calPattern;\n        this.event = eventPattern;\n    }\n\n    static defaultPatternEntry = (idx) => new PatternEntry('', idx, Pattern.emptyPattern(), Pattern.anyPattern());\n    static revive = obj => new PatternEntry(\n        obj.name, obj.idx,\n        Pattern.revive(obj.cal), Pattern.revive(obj.event));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport cyan from '@material-ui/core/colors/cyan';\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\n\nconst styles = theme => ({\n    pieChart: {\n        margin: '0 auto',\n    }\n});\n\nfunction customizedLabel(props) {\n    const {cx, cy, x, y, fill, name} = props;\n    let anchor = \"middle\";\n    const EPS = 2;\n    let dx = 0;\n    let dy = 0;\n    if (x < cx - EPS) {\n        dx = -5;\n        anchor = \"end\"\n    } else if (x > cx + EPS) {\n        dx = 5;\n        anchor = \"start\";\n    }\n\n    if (y < cy - EPS) {\n        dy = -5;\n    } else if (y > cy + EPS) {\n        dy = 10;\n    }\n\n    return (<text x={x} y={y} dx={dx} dy={dy} fill={fill} textAnchor={anchor}>{`${name}`}</text>);\n}\n\nfunction ChromiclePieChart(props) {\n    return (\n    <Grid container spacing={0}>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.patternGraphData}\n               dataKey='value'\n               cx={200}\n               cy={125}\n               outerRadius={60}\n               fill={deepOrange[300]}\n               label={customizedLabel}/>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.calendarGraphData}\n               dataKey='value'\n               cx={200}\n               cy={125}\n               innerRadius={40}\n               outerRadius={70}\n               fill={cyan[300]}\n               label={customizedLabel}>\n            {props.calendarGraphData.map((d, i) => <Cell key={i} fill={d.color}/>)}\n          </Pie>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n    </Grid>);\n}\n\nChromiclePieChart.propTypes = {\n    patternGraphData: PropTypes.array.isRequired,\n    calendarGraphData: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(ChromiclePieChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Pattern } from './pattern';\n\nconst styles = theme => ({\n    fieldNoRegex: {\n        width: 200\n    },\n    fieldRegex: {\n        marginRight: '0.5em'\n    }\n});\n\nclass RegexField extends React.Component {\n    render() {\n        const { classes } = this.props;\n        let items = [];\n        var pitems = this.props.options;\n        const p0 = new Pattern.emptyPattern();\n        pitems[p0.id] = p0;\n        for (let id in pitems)\n        {\n            const label = !pitems[id].isEmpty ? pitems[id].label :\n                <span style={{color: this.props.theme.palette.primary.dark}}>Custom</span>;\n            items.push(<MenuItem key={id} value={id}>{label}</MenuItem>);\n        }\n        const selectOnClick = event => {\n            let value;\n            if (pitems[event.target.value].label == null) {\n                value = new Pattern(0, true,\n                    this.props.value.isRegex ?\n                    this.props.value.value :\n                    `^${this.props.value.value}$`, null);\n            } else {\n                value = pitems[event.target.value];\n            }\n            this.props.onChange({target: {value}});\n        };\n\n        const regexTextOnChange = event => this.props.onChange({\n            target: { value: new Pattern(0, true, event.target.value, null)}});\n\n        const className = this.props.value.isRegex ? classes.fieldRegex: classes.fieldNoRegex;\n        return (\n            <FormControl>\n                <span>\n                    <Select\n                        value={this.props.value.id}\n                        onChange={selectOnClick}\n                        className={className}>{items}\n                    </Select>\n                    {this.props.value.label == null && (\n                        <TextField\n                            value={this.props.value.value}\n                            onChange={regexTextOnChange} />\n                    )}\n                </span>\n            </FormControl>);\n    }\n}\n\nRegexField.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst RegexFieldWithStyles = withStyles(styles)(RegexField);\n\nexport function CalendarField(props) {\n    let options = {};\n    for (let id in props.calendars) {\n        options[id] = new Pattern(id, false,\n            props.calendars[id].name,\n            props.calendars[id].name);\n    }\n    return (\n        <RegexFieldWithStyles\n            value={props.value}\n            options={options}\n            onChange={props.onChange}\n            theme={props.theme} />);\n}\n\nexport function EventField(props) {\n    let any = Pattern.anyPattern();\n    let options = {};\n    options[any.id] = any;\n    return (\n        <RegexFieldWithStyles\n            value={props.value}\n            options={options}\n            onChange={props.onChange}\n            theme={props.theme} />);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { CalendarField, EventField } from './RegexField';\nimport theme from './theme';\n\nconst styles = theme => ({\n    deleteButtonShow: {\n        position: 'absolute',\n        right: 0,\n        height: 48\n    },\n    deleteButtonHide: {\n        display: 'none'\n    },\n    deleteIcon: {\n        height: '100%',\n        cursor: 'pointer'\n    },\n    patternTableWrapper: {\n        overflowX: 'auto',\n        overflowY: 'hidden'\n    },\n    patternTable: {\n        minWidth: 600\n    }\n});\n\nconst patternHead = [\n    {label: \"Name\", field: \"name\", elem: TextField},\n    {label: \"Calendar\", field: \"cal\", elem: withTheme(theme)(CalendarField)},\n    {label: \"Event\", field: 'event', elem: withTheme(theme)(EventField)}];\n\nclass PatternTable extends React.Component {\n    state = {\n        page: 0,\n        rowsPerPage: 5,\n        activePattern: null\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    }\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    }\n\n    render() {\n        const { classes, calendars, patterns } = this.props;\n        const { rowsPerPage, page } = this.state;\n        const nDummy = rowsPerPage - Math.min(rowsPerPage, patterns.length - page * rowsPerPage);\n        let rows = patterns.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(p => (\n            <TableRow\n                onMouseOver={() => this.setState({ activePattern: p.idx })}\n                onMouseOut={() => this.setState({ activePattern: null })}>\n                {\n                    patternHead.map(s => {\n                        const CustomText = s.elem;\n                        return (\n                            <TableCell>\n                                <CustomText\n                                    value={p[s.field]}\n                                    calendars={calendars}\n                                    onChange={event => this.props.onUpdatePattern(s.field, p.idx, event.target.value)}/>\n                            </TableCell>)})\n                }\n                <span className={this.state.activePattern === p.idx ? classes.deleteButtonShow : classes.deleteButtonHide}>\n                    <DeleteOutlinedIcon\n                        className={classes.deleteIcon}\n                        onClick={() => this.props.onRemovePattern(p.idx)} />\n                </span>\n            </TableRow>));\n\n        return (\n            <div>\n                <div className={classes.patternTableWrapper}>\n                    <Table className={classes.patternTable}>\n                        <TableHead>\n                            <TableRow>{patternHead.map((s, i) => (<TableCell key={i}>{s.label}</TableCell>))}</TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows}\n                            {\n                                nDummy > 0 && (\n                                    <TableRow style={{ height: 48 * nDummy }}>\n                                        <TableCell colSpan={patternHead.length} />\n                                    </TableRow>)\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={patterns.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{'aria-label': 'Previous Page'}}\n                    nextIconButtonProps={{'aria-label': 'Next Page'}}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage} />\n            </div>);\n    }\n}\n\n\nPatternTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n    patterns: PropTypes.array.isRequired,\n    calendars: PropTypes.object.isRequired,\n    onRemovePattern: PropTypes.func.isRequired,\n    onUpdatePattern: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(PatternTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n// modified from https://material-ui.com/demos/snackbars/\n\nconst variantIcon = {\n    error: ErrorIcon,\n    warning: WarningIcon,\n};\n\nconst styles = theme => ({\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction CustomSnackbar(props) {\n    const { classes, className, message, variant, open, onClose, ...other } = props;\n    const Icon = variantIcon[variant];\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={10000}\n            onClose={onClose}>\n            <SnackbarContent\n                className={classNames(classes[variant], className)}\n                aria-describedby=\"snackbar-content\"\n                message={\n                    <span id=\"snackbar-content\" className={classes.message}>\n                        <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                        {message}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={onClose}\n                    >\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                ]}\n                {...other}\n            />\n        </Snackbar>\n    );\n}\n\nexport default withStyles(styles)(CustomSnackbar);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\n\n// modified from https://material-ui.com/demos/dialogs/\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nfunction AlertDialog(props) {\n    return (\n        <Dialog\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={() => props.handleClose(false)}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\">\n            <DialogTitle id=\"alert-dialog-slide-title\">\n                {props.title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {props.message}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={() => props.handleClose(false)} color=\"primary\">\n                No\n            </Button>\n            <Button onClick={() => props.handleClose(true)} color=\"primary\">\n                Yes\n            </Button>\n    </DialogActions>\n</Dialog>\n    );\n}\n\nexport default AlertDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker } from 'react-dates';\nimport { withStyles } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as gapi from './gapi';\nimport { msgType, MsgClient } from './msg';\nimport { Pattern, PatternEntry } from './pattern';\nimport PieChart from './Chart';\nimport PatternTable from './PatternTable';\nimport Snackbar from './Snackbar';\nimport AlertDialog from './Dialog';\n\nconst default_chart_data = [\n    {name: 'Work', value: 10, color: cyan[300]},\n    {name: 'Wasted', value: 10, color: cyan[300]}];\n\nfunction filterPatterns(patterns, calName) {\n    return patterns.filter(p => {\n        return p.cal.regex.test(calName);\n    });\n}\n\nconst styles = theme => ({\n    buttonSpacer: {\n        marginBottom: theme.spacing.unit * 4,\n    },\n});\n\nclass CustomAnalyzer extends React.Component {\n    state = {\n        patterns: [],\n        calendars: {},\n        startDate: null,\n        endDate: null,\n        patternGraphData: default_chart_data,\n        calendarGraphData: default_chart_data,\n        snackBarOpen: false,\n        snackBarMsg: 'unknown',\n        snackBarVariant: 'error',\n        dialogOpen: false,\n        dialogMsg: {title: '', message: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        this.msgClient = new MsgClient('main');\n        this.msgClient.sendMsg({\n            type: msgType.getPatterns,\n            data: { id: 'analyze' }\n        }).then(msg => {\n            this.setState({ patterns: msg.data.map(p => PatternEntry.revive(p)) });\n        });\n        this.msgClient.sendMsg({ type: msgType.getCalendars, data: { enabledOnly: true }}).then(msg => {\n            this.setState({ calendars: msg.data });\n        });\n        gapi.getLoggedIn().then(b => !b &&\n            this.handleSnackbarOpen('Not logged in. Operating in offline mode.', 'warning'));\n        this.dialogPromiseResolver = null;\n    }\n\n    updatePattern = (field, idx, value) => {\n        let patterns = this.state.patterns;\n        patterns[idx][field] = value;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'analyze', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    removePattern = idx => {\n        let patterns = this.state.patterns;\n        patterns.splice(idx, 1);\n        for (let i = 0; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'analyze', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    newPattern = () => {\n        let patterns = [PatternEntry.defaultPatternEntry(0), ...this.state.patterns];\n        for (let i = 1; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'analyze', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    loadPatterns = patterns => {\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'analyze', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    getCalEvents = (id, start, end) => {\n        return this.msgClient.sendMsg({ type: msgType.getCalEvents, data: { id,\n            start: start.getTime(),\n            end: end.getTime() } })\n            .then(({ data }) => data.map(e => {\n                return {\n                    id: e.id,\n                    start: new Date(e.start),\n                    end: new Date(e.end) }\n            }));\n    }\n\n    analyze = () => {\n        if (!(this.state.startDate && this.state.endDate)) {\n            this.handleSnackbarOpen('Please choose a valid time range.', 'error');\n            return;\n        }\n        let start = this.state.startDate.startOf('day').toDate();\n        let end = this.state.endDate.startOf('day').toDate();\n        let event_pms = [];\n        let cals = this.state.calendars;\n        for (let id in cals)\n        {\n            let patterns = filterPatterns(this.state.patterns, cals[id].name);\n            if (patterns.length > 0)\n                event_pms.push(this.getCalEvents(id, start, end)\n                    .then(r => { return { id, events: r, patterns }; }));\n        }\n        Promise.all(event_pms).then(all_events => {\n            console.log(all_events);\n            let events = {};\n            let patterns = {};\n            let results = {}; // pattern idx => time\n            let cal_results = {}; // cal id => time\n            all_events.forEach(e => {\n                events[e.id] = e.events;\n                patterns[e.id] = e.patterns;\n            });\n            for (let i = 0; i < this.state.patterns.length; i++)\n                results[i] = 0;\n            for (let id in cals) {\n                if (!events[id]) continue;\n                events[id].forEach(event => {\n                    patterns[id].forEach(p => {\n                        if (!p.event.regex.test(event.summary)) return;\n                        if (!cal_results.hasOwnProperty(id)) {\n                            cal_results[id] = 0;\n                        }\n                        let duration = (event.end - event.start) / 60000;\n                        results[p.idx] += duration;\n                        cal_results[id] += duration;\n                    });\n                });\n            }\n            let patternGraphData = [];\n            let calendarGraphData = [];\n            for (let i = 0; i < this.state.patterns.length; i++) {\n                patternGraphData.push({ name: this.state.patterns[i].name, value: results[i] / 60.0 });\n            }\n            for (let id in cal_results) {\n                calendarGraphData.push({\n                    name: cals[id].name,\n                    value: (cal_results[id] / 60.0),\n                    color: cals[id].color.background});\n            }\n            console.log(patternGraphData, calendarGraphData);\n            this.setState({ patternGraphData, calendarGraphData });\n        });\n    };\n\n    reset = () => {\n        this.handleDialogOpen(\"Reset\", \"Are you sure to reset the patterns?\").then(ans => {\n            if (!ans) return;\n            this.loadPatterns([]);\n            this.setState({ startDate: null, endDate: null });\n        });\n    }\n\n    default = () => {\n        this.handleDialogOpen(\"Load Default\", \"Load the calendars as patterns?\").then(ans => {\n            if (!ans) return;\n            this.loadPatterns(Object.keys(this.state.calendars).map((id, idx) => {\n                let item = this.state.calendars[id];\n                return new PatternEntry(item.name, idx,\n                    new Pattern(id, false, item.name, item.name),\n                    Pattern.anyPattern());\n            }));\n        });\n    }\n\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        this.setState({ snackBarOpen: false });\n    }\n\n    handleSnackbarOpen = (msg, variant) => {\n        this.setState({ snackBarOpen: true, snackBarMsg: msg, snackBarVariant: variant });\n    }\n\n    handleDialogOpen = (title, message) => {\n        let pm = new Promise(resolver => {\n            this.dialogPromiseResolver = resolver\n        });\n        this.setState({ dialogOpen: true, dialogMsg: {title, message} });\n        return pm;\n    }\n\n    handleDialogClose = result => {\n        this.dialogPromiseResolver(result);\n        this.setState({ dialogOpen: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid container  spacing={16}>\n                <AlertDialog\n                    title={this.state.dialogMsg.title}\n                    message={this.state.dialogMsg.message}\n                    open={this.state.dialogOpen}\n                    handleClose={this.handleDialogClose}/>\n                <Snackbar\n                    message={this.state.snackBarMsg}\n                    open={this.state.snackBarOpen}\n                    variant={this.state.snackBarVariant}\n                    onClose={this.handleSnackbarClose}/>\n                <Grid item md={6} xs={12}>\n                    <FormControl fullWidth={true}>\n                        <FormGroup>\n                            <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                                Analyzed Events\n                                <IconButton\n                                    style={{marginBottom: '0.12em', marginLeft: '0.5em'}}\n                                    onClick={() => this.newPattern()}><AddCircleIcon /></IconButton>\n                            </Typography>\n                            <PatternTable\n                                patterns={this.state.patterns}\n                                calendars={this.state.calendars}\n                                onRemovePattern={this.removePattern}\n                                onUpdatePattern={this.updatePattern} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                                Time Range\n                            </Typography>\n                            <div style={{textAlign: 'center'}}>\n                                <DateRangePicker\n                                    startDate={this.state.startDate}\n                                    startDateId=\"start_date_id\"\n                                    endDate={this.state.endDate}\n                                    endDateId=\"end_date_id\"\n                                    onDatesChange={({ startDate, endDate }) => {\n                                        this.setState({ startDate, endDate });\n                                    }} \n                                    focusedInput={this.state.focusedInput}\n                                    onFocusChange={focusedInput => this.setState({ focusedInput })}\n                                    isOutsideRange={() => false} />\n                            </div>\n                        </FormGroup>\n                        <div className={classes.buttonSpacer} />\n                        <Grid container spacing={16}>\n                            <Grid item md={4} xs={12}>\n                                <FormGroup>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.default}>Load Default</Button>\n                                </FormGroup>\n                            </Grid>\n                            <Grid item md={4} xs={12}>\n                                <FormGroup>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.reset}>Reset</Button>\n                                </FormGroup>\n                            </Grid>\n                            <Grid item md={4} xs={12}>\n                                <FormGroup>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.analyze}>Analyze</Button>\n                                </FormGroup>\n                            </Grid>\n                        </Grid>\n                    </FormControl>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                        Results\n                    </Typography>\n                    <PieChart\n                        patternGraphData={this.state.patternGraphData}\n                        calendarGraphData={this.state.calendarGraphData}/>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCustomAnalyzer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomAnalyzer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as gapi from './gapi';\nimport { msgType, MsgClient } from './msg';\nimport { Pattern, PatternEntry } from './pattern';\nimport PatternTable from './PatternTable';\nimport Snackbar from './Snackbar';\nimport AlertDialog from './Dialog';\n\nconst styles = theme => ({\n    tableHead: {\n        verticalAlign: 'top',\n        textAlign: 'right',\n        lineHeight: '3em',\n    },\n    tableContent: {\n        textAlign: 'left',\n        maxWidth: 600,\n    },\n    calendarList: {\n        maxHeight: 400,\n        overflowY: 'auto'\n    }\n});\n\nconst STableCell = withStyles(theme => ({\n    body: {\n        fontSize: 16,\n    },\n}))(TableCell);\n\nconst CompactListItem = withStyles(theme => ({\n    dense: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n}))(ListItem);\n\nclass Settings extends React.Component {\n    state = {\n        isLoggedIn: false,\n        patterns: [],\n        calendars: {},\n        snackBarOpen: false,\n        snackBarMsg: 'unknown',\n        dialogOpen: false,\n        dialogMsg: {title: '', message: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        this.msgClient = new MsgClient('main');\n        gapi.getLoggedIn().then(b => this.setState({ isLoggedIn: b }));\n        this.msgClient.sendMsg({\n            type: msgType.getPatterns,\n            data: { id: 'main' }\n        }).then(msg => {\n            this.setState({ patterns: msg.data.map(p => PatternEntry.revive(p)) });\n        });\n        this.msgClient.sendMsg({ type: msgType.getCalendars, data: { enabledOnly: false } }).then(msg => {\n            this.setState({ calendars: msg.data });\n        });\n        this.dialogPromiseResolver = null;\n    }\n\n    handleLogin = () => {\n        gapi.login().then(() => {\n            this.setState({ isLoggedIn: true });\n            this.loadAll(true);\n        }).catch(() => this.handleSnackbarOpen(\"Failed to login!\"));\n    }\n\n    handleLogout = () => {\n        this.handleDialogOpen(\"Logout\", \"Are you sure to logout?\").then(ans => {\n            if (!ans) return;\n            gapi.logout().then(() => {\n                this.setState({ isLoggedIn: false });\n                //this.loadPatterns([], 'analyze');\n            }).catch(() => this.handleSnackbarOpen(\"Failed to logout!\"));\n        });\n    }\n\n    handleToggleCalendar = id => {\n        var calendars = {...this.state.calendars};\n        calendars[id].enabled = !calendars[id].enabled;\n        this.msgClient.sendMsg({ type: msgType.updateCalendars, data: calendars }).then(() =>\n            this.setState({ calendars }));\n    }\n\n    loadAll = loadDefaultPatterns => {\n        let colors = gapi.getAuthToken().then(gapi.getColors).then(color => {\n            return color.calendar;\n        });\n        let cals = gapi.getAuthToken().then(gapi.getCalendars);\n        Promise.all([colors, cals]).then(([colors, items]) => {\n            var cals = {};\n            items.forEach(item => {\n                cals[item.id] = {\n                    name: item.summary,\n                    color: colors[item.colorId],\n                    enabled: true\n                    //cal: new gapi.GCalendar(item.id, item.summary)\n                }});\n            this.loadCalendars(cals);\n            if (loadDefaultPatterns)\n            {\n                this.loadPatterns(items.map((item, idx) => {\n                    return new PatternEntry(item.summary, idx,\n                        new Pattern(item.id, false, item.summary, item.summary),\n                        Pattern.anyPattern());\n                }), 'main');\n            }\n        });\n    };\n\n    loadCalendars = calendars => {\n        for (let id in this.state.calendars) {\n            if (calendars.hasOwnProperty(id))\n                calendars[id].enabled = this.state.calendars[id].enabled;\n        }\n        this.msgClient.sendMsg({ type: msgType.updateCalendars, data: calendars }).then(() =>\n            this.setState({ calendars }));\n    };\n\n    loadPatterns = (patterns, id) => {\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id, patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    updatePattern = (field, idx, value) => {\n        let patterns = this.state.patterns;\n        patterns[idx][field] = value;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'main', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    removePattern = idx => {\n        let patterns = this.state.patterns;\n        patterns.splice(idx, 1);\n        for (let i = 0; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'main', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    newPattern = () => {\n        let patterns = [PatternEntry.defaultPatternEntry(0), ...this.state.patterns];\n        for (let i = 1; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.msgClient.sendMsg({\n            type: msgType.updatePatterns,\n            data: { id: 'main', patterns }\n        }).then(() => this.setState({ patterns }));\n    };\n\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        this.setState({ snackBarOpen: false });\n    }\n\n    handleSnackbarOpen = msg => {\n        this.setState({ snackBarOpen: true, snackBarMsg: msg });\n    }\n\n    handleDialogOpen = (title, message) => {\n        let pm = new Promise(resolver => {\n            this.dialogPromiseResolver = resolver\n        });\n        this.setState({ dialogOpen: true, dialogMsg: {title, message} });\n        return pm;\n    }\n\n    handleDialogClose = result => {\n        this.dialogPromiseResolver(result);\n        this.setState({ dialogOpen: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <AlertDialog\n                    title={this.state.dialogMsg.title}\n                    message={this.state.dialogMsg.message}\n                    open={this.state.dialogOpen}\n                    handleClose={this.handleDialogClose}/>\n                <Snackbar\n                    message={this.state.snackBarMsg}\n                    open={this.state.snackBarOpen}\n                    variant='error'\n                    onClose={this.handleSnackbarClose}/>\n               <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                   General\n               </Typography>\n               <Table>\n                   <TableBody>\n                       <TableRow>\n                           <STableCell className={classes.tableHead}>Account</STableCell>\n                           <STableCell className={classes.tableContent}>\n                               {\n                                   (this.state.isLoggedIn &&\n                                       <Button variant=\"contained\" color=\"primary\" onClick={this.handleLogout}>Logout</Button>) ||\n                                       <Button variant=\"contained\" color=\"primary\" onClick={this.handleLogin}>Login</Button>\n                               }\n                           </STableCell>\n                       </TableRow>\n                       <TableRow>\n                           <STableCell className={classes.tableHead}>\n                           <IconButton\n                               style={{marginBottom: '0.12em', marginRight: '0.5em'}}\n                               onClick={() => this.loadAll(false)}\n                               disabled={!this.state.isLoggedIn}><RefreshIcon /></IconButton>\n                               Calendars\n                           </STableCell>\n                           <STableCell className={classes.tableContent}>\n                               {(this.state.isLoggedIn &&\n                               <List className={classes.calendarList}>\n                                   {Object.keys(this.state.calendars).map(id =>\n                                       <CompactListItem\n                                           key={id}\n                                           onClick={() => this.handleToggleCalendar(id)}\n                                           disableGutters\n                                           dense button >\n                                       <Checkbox\n                                           checked={this.state.calendars[id].enabled}\n                                           disableRipple />\n                                       <ListItemText primary={this.state.calendars[id].name} />\n                                       </CompactListItem>)}\n                               </List>) || 'Please Login.'}\n                           </STableCell>\n                       </TableRow>\n                       <TableRow>\n                           <STableCell className={classes.tableHead}>\n                               <IconButton\n                                   style={{marginBottom: '0.12em', marginRight: '0.5em'}}\n                                   onClick={() => this.newPattern()}\n                                   disabled={!this.state.isLoggedIn}><AddCircleIcon /></IconButton>\n                               Tracked Events\n                           </STableCell>\n                           <STableCell className={classes.tableContent}>\n                               {(this.state.isLoggedIn &&\n                               <FormControl fullWidth={true}>\n                               <PatternTable\n                                   patterns={this.state.patterns}\n                                   calendars={this.state.calendars}\n                                   onRemovePattern={this.removePattern}\n                                   onUpdatePattern={this.updatePattern} />\n                               </FormControl>) || 'Please Login.'}\n                           </STableCell>\n                       </TableRow>\n                   </TableBody>\n               </Table>\n            </div>\n        );\n    }\n}\n\nSettings.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Settings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport { HashRouter as Router, withRouter, Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport { hashHistory } from 'react-router';\nimport Logo from './Logo';\nimport theme from './theme';\nimport CustomAnalyzer from './CustomAnalyzer';\nimport Settings from './Settings';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'inline-block'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        overflow: 'auto',\n    },\n    indicator: {\n        backgroundColor: theme.palette.primary.contrastText\n    }\n});\n\nclass DashboardTabs extends React.Component {\n    handleChangeTab = (event, currentTab) => {\n        this.props.history.push(currentTab);\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"absolute\"\n                    className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            <Logo style={{width: '2em', verticalAlign: 'bottom', marginRight: '0.2em'}}/>Chromicle\n                        </Typography>\n                        <Tabs styles={{ display: 'inline-block '}}\n                            classes={{ indicator: classes.indicator }}\n                            value={this.props.history.location.pathname}\n                            onChange={this.handleChangeTab}>\n                            <Tab label=\"Settings\" component={Link} to=\"/settings\" value=\"/settings\" />\n                            <Tab label=\"Analyze\" component={Link} to=\"/analyze\" value=\"/analyze\" />\n                        </Tabs>\n                    </Toolbar>\n                </AppBar>\n                <CssBaseline />\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Route exact path=\"/analyze\" component={CustomAnalyzer} />\n                    <Route exact path=\"/\" render={() => <Redirect to=\"/settings\" />}/>\n                </main>\n            </div>\n        );\n    }\n}\n\nDashboardTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nclass Dashboard extends React.Component {\n    render() {\n        const { classes } = this.props;\n        let Tabs = withRouter(withStyles(styles)(DashboardTabs));\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router><Tabs /></Router>\n            </MuiThemeProvider>);\n    }\n}\n\nexport default Dashboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}