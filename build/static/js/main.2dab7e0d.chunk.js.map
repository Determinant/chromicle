{"version":3,"sources":["Logo.js","App.js","serviceWorker.js","index.js"],"names":["Logo","props","react_default","a","createElement","xmlns","viewBox","version","style","id","transform","points","fill","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","fontFamily","default_chart_data","name","value","color","cyan","gapi_base","theme","createMuiTheme","palette","primary","light","orange","main","dark","contrastText","to_params","dict","Object","entries","map","_ref","_ref2","slicedToArray","k","v","concat","encodeURIComponent","join","getCalendars","token","fetch","access_token","method","async","then","response","json","data","items","getColors","customizedLabel","cx","cy","x","y","stroke","anchor","dx","dy","textAnchor","ChromiclePieChart","Grid_default","container","spacing","item","xs","lg","className","classes","patternTableWrapper","PieChart","width","height","pieChart","Pie","patternGraphData","outerRadius","deepOrange","label","Tooltip","formatter","toFixed","calendarGraphData","innerRadius","d","Cell","Dashboard","state","open","patterns","page","rowsPerPage","timeRange","Promise","resolver","chrome","identity","getAuthToken","interactive","activePattern","cached","calendars","handleChangePage","event","_this","setState","handleChangeRowsPerPage","target","updatePattern","field","idx","removePattern","splice","i","length","newPattern","cal","toConsumableArray","analyze","startDate","endDate","start","toISOString","end","event_pms","_loop","calId","timeMin","timeMax","push","events","all","results","cal_results","_loop2","calName","filter","p","RegExp","test","filterPatterns","regex","forEach","status","summary","undefined","duration","Date","dateTime","background","alert","loadPatterns","colors","calendar","cals","_ref3","_ref4","colorId","_this2","this","_this$state","rows","nDummy","Math","min","styles","root","AppBar_default","position","appBar","Toolbar_default","disableGutters","toolbar","Typography_default","component","variant","noWrap","title","verticalAlign","marginRight","content","appBarSpacer","CssBaseline_default","md","FormControl_default","fullWidth","FormGroup_default","gutterBottom","IconButton_default","marginBottom","marginLeft","onClick","AddCircle_default","Table_default","patternTable","TableHead_default","TableRow_default","patternHead","s","TableCell_default","TableBody_default","slice","onMouseOver","onMouseOut","TextField_default","onChange","right","display","DeleteOutlined_default","cursor","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","textAlign","react_dates","startDateId","endDateId","onDatesChange","_ref5","focusedInput","onFocusChange","isOutsideRange","buttonSpacer","Button_default","React","Component","withStyles","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","flexGrow","sectionTitle","flex","mixins","padding","unit","overflow","overflowX","overflowY","minWidth","margin","fab","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dab7e0d.chunk.js","sourcesContent":["import React from 'react';\nexport default (props) =>\n  <svg\n     xmlns=\"http://www.w3.org/2000/svg\"\n     viewBox=\"0 0 98.905998 93.557997\"\n     version=\"1.1\"\n     style={props.style}>\n    <g id=\"g13\"\n       transform=\"translate(-153.533,-203.047)\">\n      <g id=\"g29\">\n        <g\n           id=\"g27\">\n          <polygon\n             id=\"polygon7\"\n             points=\"252.439,241.924 234.556,288.703 185.103,296.605 153.533,257.728 171.416,210.949 220.869,203.047 \"\n             style={{fill: '#ff8000'}} />\n          <g\n             id=\"g11\"\n             transform=\"translate(167.24355,224.20734)\">\n            <text\n               id=\"text9\"\n                style={{fontStyle:'normal',\n                    fontVariant:'normal',\n                    fontWeight:'normal',\n                    fontStretch:'normal',\n                    fontSize:75,\n                    fontFamily:'TypoPRO Fantasque Sans Mono',\n                    fill:'#ffeade'}}\n               transform=\"translate(0.586,49.072)\">Cr</text>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'typeface-roboto';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker, DayPickerRangeController } from 'react-dates';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\nimport cyan from '@material-ui/core/colors/cyan';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport Logo from './Logo';\n\nconst default_chart_data = [{name: 'Work', value: 10, color: cyan[300]},\n                            {name: 'Wasted', value: 10, color: cyan[300]}];\n\nconst gapi_base = 'https://www.googleapis.com/calendar/v3';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: orange[300],\n            main: orange[500],\n            dark: orange[700],\n            contrastText: \"#fff\"\n        }\n    }\n});\n\n/* eslint-disable no-undef */\n\nfunction to_params(dict) {\n    return Object.entries(dict).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n}\n\nfunction getAuthToken() {\n    return new Promise(resolver =>\n        chrome.identity.getAuthToken(\n            {interactive: true}, token => resolver(token)));\n}\n\nfunction getCalendars(token) {\n    return fetch(gapi_base + '/users/me/calendarList?' + to_params({access_token: token}),\n            { method: 'GET', async: true })\n        .then(response => response.json())\n        .then(data => data.items);\n}\n\nfunction genEventsGetter(calId, timeMin, timeMax) {\n    return token => fetch(gapi_base + '/calendars/' + calId + '/events?' + to_params({\n        access_token: token,\n        timeMin,\n        timeMax\n    }), { method: 'GET', async: true })\n        .then(response => response.json())\n        .then(data => data.items);\n}\n\nfunction getColors(token) {\n    return fetch(gapi_base + '/colors?' + to_params({access_token: token}), { method: 'GET', async: true })\n        .then(response => response.json());\n}\n\nfunction filterPatterns(patterns, calName) {\n    return patterns.filter(p => {\n        let re = new RegExp(p.cal);\n        return re.test(calName);\n    });\n}\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    sectionTitle: {\n        flex: '0 0 auto'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        overflow: 'auto',\n    },\n    buttonSpacer: {\n        marginBottom: theme.spacing.unit * 4,\n    },\n    patternTableWrapper: {\n        overflowX: 'auto',\n        overflowY: 'hidden'\n    },\n    patternTable: {\n        minWidth: 600\n    },\n    pieChart: {\n        margin: '0 auto',\n    },\n    fab: {\n        margin: theme.spacing.unit,\n    }\n});\n\nfunction customizedLabel(props) {\n    const {cx, cy, x, y, stroke, fill, name, value} = props;\n    let anchor = \"middle\";\n    const EPS = 2;\n    let dx = 0;\n    let dy = 0;\n    if (x < cx - EPS) {\n        dx = -5;\n        anchor = \"end\"\n    } else if (x > cx + EPS) {\n        dx = 5;\n        anchor = \"start\";\n    }\n\n    if (y < cy - EPS) {\n        dy = -5;\n    } else if (y > cy + EPS) {\n        dy = 10;\n    }\n\n    return (<text x={x} y={y} dx={dx} dy={dy} fill={fill} textAnchor={anchor}>{`${name}`}</text>);\n}\n\nfunction ChromiclePieChart(props) {\n    return (\n    <Grid container spacing={0}>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.patternGraphData}\n               cx={200}\n               cy={125}\n               outerRadius={60}\n               fill={deepOrange[300]}\n               label={customizedLabel}/>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.calendarGraphData}\n               cx={200}\n               cy={125}\n               innerRadius={40}\n               outerRadius={70}\n               fill={cyan[300]}\n               label={customizedLabel}>\n            {props.calendarGraphData.map(d => <Cell fill={d.color}/>)}\n          </Pie>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n    </Grid>);\n}\n\nChromiclePieChart.propTypes = {\n    patternGraphData: PropTypes.object.isRequired,\n    patterncalendarData: PropTypes.object.isRequired,\n};\n\nclass Dashboard extends React.Component {\n    state = {\n        open: true,\n        patterns: [],\n        page: 0,\n        rowsPerPage: 5,\n        timeRange: null,\n        token: getAuthToken(),\n        patternGraphData: default_chart_data,\n        calendarGraphData: default_chart_data,\n        activePattern: null\n    };\n\n    cached = {\n        calendars: {}\n    };\n\n    static patternHead = [\n        {label: \"Name\", field: \"name\"},\n        {label: \"Calendar\", field: \"cal\"},\n        {label: \"Event\", field: 'event'}];\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    updatePattern = (field, idx, value) => {\n        let patterns = this.state.patterns;\n        patterns[idx][field] = value;\n        this.setState({ patterns });\n    };\n\n    removePattern = idx => {\n        let patterns = this.state.patterns;\n        patterns.splice(idx, 1);\n        for (let i = 0; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.setState({ patterns });\n    };\n\n    newPattern = () => {\n        let patterns = [{name: '', cal: '', event: '', idx: 0 },\n                        ...this.state.patterns];\n        for (let i = 1; i < patterns.length; i++)\n            patterns[i].idx = i;\n    \tthis.setState({ patterns });\n    };\n\n    analyze = () => {\n        if (!(this.state.startDate && this.state.endDate)) {\n            alert(\"Please choose a valid time range.\");\n            return;\n        }\n        let start = this.state.startDate.toISOString();\n        let end = this.state.endDate.toISOString();\n        let event_pms = [];\n        for (let id in this.cached.calendars) {\n            event_pms.push(\n                this.state.token\n                .then(genEventsGetter(id, start, end))\n                .then(items => this.cached.calendars[id].events = items));\n        }\n\n        Promise.all(event_pms).then(() => {\n            let results = {}; // pattern idx => time\n            let cal_results = {}; // cal id => time\n            for (let i = 0; i < this.state.patterns.length; i++)\n                results[i] = 0;\n            for (let id in this.cached.calendars) {\n                let patterns = filterPatterns(this.state.patterns, this.cached.calendars[id].name)\n                    .map(p => { return { regex: new RegExp(p.event), idx: p.idx } });\n                if (!this.cached.calendars[id].events) continue;\n                this.cached.calendars[id].events.forEach(event => {\n                    if (event.status != \"confirmed\") return;\n                    patterns.forEach(p => {\n                        if (!p.regex.test(event.summary)) return;\n                        if (cal_results[id] === undefined) {\n                            cal_results[id] = 0;\n                        }\n                        let duration = (new Date(event.end.dateTime) - new Date(event.start.dateTime)) / 60000;\n                        results[p.idx] += duration;\n                        cal_results[id] += duration;\n                    });\n                });\n            }\n            let patternGraphData = [];\n            let calendarGraphData = [];\n            for (let i = 0; i < this.state.patterns.length; i++) {\n                patternGraphData.push({ name: this.state.patterns[i].name, value: results[i] / 60.0 });\n            }\n            for (let id in cal_results) {\n                calendarGraphData.push({\n                    name: this.cached.calendars[id].name,\n                    value: (cal_results[id] / 60.0),\n                    color: this.cached.calendars[id].color.background});\n            }\n            this.setState({ patternGraphData, calendarGraphData });\n        });\n    };\n\n    loadPatterns = () => {\n        let token = this.state.token;\n        let colors = token.then(getColors).then(color => {\n            return color.calendar;\n        });\n        let cals = token.then(getCalendars);\n        Promise.all([colors, cals]).then(([colors, items]) => {\n            items.forEach(item => {\n                this.cached.calendars[item.id] = {\n                    name: item.summary,\n                    events: {},\n                    color: colors[item.colorId]\n                };\n            });\n            this.setState({ patterns: items.map((item, idx) => {\n                return { name: item.summary,\n                         cal: item.summary,\n                         event: '.*',\n                         idx }\n            })});\n        });\n    };\n\n    render() {\n      const { classes } = this.props;\n      const { patterns, rows, rowsPerPage, page } = this.state;\n      const nDummy = rowsPerPage - Math.min(rowsPerPage, patterns.length - page * rowsPerPage);\n\n      return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar\n           position=\"absolute\"\n           className={classes.appBar}>\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                <Logo style={{width: '2em', verticalAlign: 'bottom', marginRight: '0.2em'}}/>Chromicle\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n              <Grid container  spacing={16}>\n              <CssBaseline />\n              <Grid item md={6} xs={12}>\n                <FormControl fullWidth={true}>\n                  <FormGroup>\n                    <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                      Event Patterns\n                      <IconButton\n                       style={{marginBottom: '0.12em', marginLeft: '0.5em'}}\n                       onClick={() => this.newPattern()}><AddCircleIcon /></IconButton>\n                    </Typography>\n                    <div className={classes.patternTableWrapper}>\n                    <Table className={classes.patternTable}>\n                      <TableHead>\n                        <TableRow>{Dashboard.patternHead.map(s => (<TableCell>{s.label}</TableCell>))}</TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {patterns.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(p => (\n                            <TableRow\n                             onMouseOver={() => this.setState({ activePattern: p.idx })}\n                             onMouseOut={() => this.setState({ activePattern: null })}>\n                              {Dashboard.patternHead.map(s => (\n                                <TableCell>\n                                  <TextField\n                                   value={p[s.field]}\n                                   onChange={event => this.updatePattern(s.field, p.idx, event.target.value)}/>\n                                  </TableCell>))}\n                                  <span style={(this.state.activePattern == p.idx &&\n                                                  { position: 'absolute', right: 0, height: 48 }) ||\n                                                  { display: 'none' }}>\n                                    <DeleteOutlinedIcon\n                                     style={{ height: '100%', cursor: 'pointer' }}\n                                     onClick={() => this.removePattern(p.idx)} />\n                                  </span>\n                            </TableRow>))}\n                        {nDummy > 0 && (\n                            <TableRow style={{ height: 48 * nDummy }}>\n                              <TableCell colSpan={Dashboard.patternHead.length} />\n                            </TableRow>)}\n                      </TableBody>\n                    </Table>\n                    </div>\n                    <TablePagination\n                       rowsPerPageOptions={[5, 10, 25]}\n                       component=\"div\"\n                       count={patterns.length}\n                       rowsPerPage={rowsPerPage}\n                       page={page}\n                       backIconButtonProps={{'aria-label': 'Previous Page'}}\n                       nextIconButtonProps={{'aria-label': 'Next Page'}}\n                       onChangePage={this.handleChangePage}\n                       onChangeRowsPerPage={this.handleChangeRowsPerPage}/>\n                  </FormGroup>\n                  <FormGroup>\n            \t    <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n            \t      Time Range\n            \t    </Typography>\n                    <div style={{textAlign: 'center'}}>\n                      <DateRangePicker\n    \t\t\t       startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n    \t\t\t       startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n    \t\t\t       endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n    \t\t\t       endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n    \t\t\t       onDatesChange={({ startDate, endDate }) => {\n                         //if (startDate && endDate)\n                         //    this.setState({ timeRange: [startDate.toISOString(), endDate.toISOString()]});\n                         this.setState({ startDate, endDate });\n                       }} // PropTypes.func.isRequired,\n    \t\t\t       focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n    \t\t\t       onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                       isOutsideRange={() => false}/>\n                    </div>\n                  </FormGroup>\n                  <div className={classes.buttonSpacer} />\n                  <Grid container spacing={16}>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.loadPatterns}>Load</Button>\n                        </FormGroup>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.analyze}>Analyze</Button>\n                      </FormGroup>\n                    </Grid>\n                  </Grid>\n                </FormControl>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                  Graph\n                </Typography>\n                  <ChromiclePieChart\n                   patternGraphData={this.state.patternGraphData}\n                   calendarGraphData={this.state.calendarGraphData}\n                   classes={classes}/>\n              </Grid>\n            </Grid>\n          </main>\n        </div>\n      </MuiThemeProvider>);\n    }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}