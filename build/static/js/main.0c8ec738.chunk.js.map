{"version":3,"sources":["Logo.js","gapi.js","pattern.js","Chart.js","RegexField.js","theme.js","PatternTable.js","App.js","serviceWorker.js","index.js"],"names":["Logo","props","react_default","a","createElement","xmlns","viewBox","version","style","id","transform","points","fill","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","fontFamily","gapi_base","GApiError","invalidSyncToken","otherError","to_params","dict","Object","entries","map","_ref","_ref2","slicedToArray","k","v","concat","encodeURIComponent","join","getAuthToken","Promise","resolver","chrome","identity","interactive","token","getCalendars","fetch","access_token","method","async","then","response","json","data","items","getColors","GCalendar","calId","name","classCallCheck","this","syncToken","cache","createClass","key","value","e","ks","dateToCacheKey","start","ke","Date","end","getTime","getSlot","slotEndDate","slotStartDate","s","results","console","log","push","getSlotEvents","apply","toConsumableArray","_this","resultsPerRequest","arguments","length","undefined","singleFetch","pageToken","maxResults","status","otherErrors","nextPageToken","nextSyncToken","getEvents","r","pm_results","resolve","eventId","getEvent","all","forEach","dateTime","addEvent","removeEvent","catch","sync","_this2","getCachedEvents","date","Math","floor","Pattern","isRegex","label","get","RegExp","emptyPattern","anyPattern","PatternEntry","idx","calPattern","eventPattern","cal","event","defaultPatternEntry","customizedLabel","cx","cy","x","y","anchor","dx","dy","textAnchor","withStyles","theme","pieChart","margin","Grid_default","container","spacing","item","xs","lg","className","classes","patternTableWrapper","PieChart","width","height","Pie","patternGraphData","dataKey","outerRadius","deepOrange","Tooltip","formatter","toFixed","calendarGraphData","innerRadius","cyan","d","i","Cell","color","RegexField","pitems","options","p0","isEmpty","palette","primary","dark","MenuItem_default","fieldRegex","fieldNoRegex","FormControl_default","Select_default","onChange","target","TextField_default","React","Component","RegexFieldWithStyles","marginRight","createMuiTheme","light","orange","main","contrastText","typography","useNextVariants","patternHead","field","elem","TextField","withTheme","cached","calendars","any","PatternTable","state","page","rowsPerPage","handleChangePage","setState","handleChangeRowsPerPage","_this$props","patterns","_this$state","nDummy","min","rows","slice","p","TableRow_default","onMouseOver","activePattern","onMouseOut","CustomText","TableCell_default","onUpdatePattern","deleteButtonShow","deleteButtonHide","DeleteOutlined_default","deleteIcon","onClick","onRemovePattern","Table_default","patternTable","TableHead_default","TableBody_default","colSpan","TablePagination_default","rowsPerPageOptions","component","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","position","right","display","cursor","overflowX","overflowY","minWidth","default_chart_data","Dashboard","timeRange","gapi","updatePattern","removePattern","splice","newPattern","analyze","startDate","endDate","startOf","toDate","event_pms","_loop","events","all_events","cal_results","_loop2","calName","filter","regex","test","filterPatterns","summary","hasOwnProperty","duration","background","alert","loadPatterns","colors","calendar","cals","colorId","styles","root","AppBar_default","appBar","Toolbar_default","toolbar","Typography_default","variant","noWrap","title","verticalAlign","content","appBarSpacer","CssBaseline_default","md","fullWidth","FormGroup_default","gutterBottom","IconButton_default","marginBottom","marginLeft","AddCircle_default","src_PatternTable","textAlign","react_dates","startDateId","endDateId","onDatesChange","_ref3","focusedInput","onFocusChange","isOutsideRange","buttonSpacer","Button_default","Chart","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","flexGrow","sectionTitle","flex","mixins","padding","unit","overflow","fab","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c8ec738.chunk.js","sourcesContent":["import React from 'react';\nexport default (props) =>\n  <svg\n     xmlns=\"http://www.w3.org/2000/svg\"\n     viewBox=\"0 0 98.905998 93.557997\"\n     version=\"1.1\"\n     style={props.style}>\n    <g id=\"g13\"\n       transform=\"translate(-153.533,-203.047)\">\n      <g id=\"g29\">\n        <g\n           id=\"g27\">\n          <polygon\n             id=\"polygon7\"\n             points=\"252.439,241.924 234.556,288.703 185.103,296.605 153.533,257.728 171.416,210.949 220.869,203.047 \"\n             style={{fill: '#ff8000'}} />\n          <g\n             id=\"g11\"\n             transform=\"translate(167.24355,224.20734)\">\n            <text\n               id=\"text9\"\n                style={{fontStyle:'normal',\n                    fontVariant:'normal',\n                    fontWeight:'normal',\n                    fontStretch:'normal',\n                    fontSize:75,\n                    fontFamily:'TypoPRO Fantasque Sans Mono',\n                    fill:'#ffeade'}}\n               transform=\"translate(0.586,49.072)\">Cr</text>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n","/* global chrome */\nconst gapi_base = 'https://www.googleapis.com/calendar/v3';\n\nconst GApiError = {\n    invalidSyncToken: 1,\n    otherError: 2,\n};\n\nfunction to_params(dict) {\n    return Object.entries(dict).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n}\n\nexport function getAuthToken() {\n    return new Promise(resolver =>\n        chrome.identity.getAuthToken(\n            {interactive: true}, token => resolver(token)));\n}\n\nexport function getCalendars(token) {\n    return fetch(`${gapi_base}/users/me/calendarList?${to_params({access_token: token})}`,\n            { method: 'GET', async: true })\n        .then(response => response.json())\n        .then(data => data.items);\n}\n\nexport function getColors(token) {\n    return fetch(`${gapi_base}/colors?${to_params({access_token: token})}`,\n        { method: 'GET', async: true })\n        .then(response => response.json());\n}\n\nfunction getEvent(calId, eventId, token) {\n    return fetch(`${gapi_base}/calendars/${calId}/events/${eventId}?${to_params({access_token: token})}`,\n        { method: 'GET', async: true })\n        .then(response => response.json());\n}\n\nfunction getEvents(calId, token, syncToken, resultsPerRequest=100) {\n    let results = [];\n    const singleFetch = (pageToken, syncToken) => fetch(`${gapi_base}/calendars/${calId}/events?${to_params({\n            access_token: token,\n            pageToken,\n            syncToken,\n            maxResults: resultsPerRequest\n        })}`, { method: 'GET', async: true })\n            .then(response => {\n                if (response.status === 200)\n                    return response.json();\n                else if (response.status == 410)\n                    throw GApiError.invalidSyncToken;\n                else throw GApiError.otherErrors;\n            })\n            .then(data => {\n                results.push(...data.items);\n                if (data.nextPageToken) {\n                    return singleFetch(data.nextPageToken, '');\n                } else {\n                    return ({\n                        nextSyncToken: data.nextSyncToken,\n                        results\n                    });\n                }\n            })\n\n    return singleFetch('', syncToken);\n}\n\nexport class GCalendar {\n    constructor(calId, name) {\n        this.calId = calId;\n        this.name = name;\n        this.token = getAuthToken();\n        this.syncToken = '';\n        this.cache = {};\n    }\n\n    static dateToCacheKey(date) {\n        return Math.floor(date / 8.64e7);\n    }\n\n    getSlot(k) {\n        if (!this.cache[k])\n            this.cache[k] = {};\n        return this.cache[k];\n    }\n\n    static slotStartDate(k) { return new Date(k * 8.64e7); }\n    static slotEndDate(k) { return new Date((k + 1) * 8.64e7); }\n\n    addEvent(e) {\n        let ks = GCalendar.dateToCacheKey(e.start);\n        let ke = GCalendar.dateToCacheKey(new Date(e.end.getTime() - 1));\n        if (ks === ke)\n            this.getSlot(ks)[e.id] = {\n                start: e.start,\n                end: e.end,\n                id: e.id };\n        else\n        {\n            this.getSlot(ks)[e.id] = {\n                start: e.start,\n                end: GCalendar.slotEndDate(ks),\n                id: e.id };\n            this.getSlot(ke)[e.id] = {\n                start: GCalendar.slotStartDate(ke),\n                end: e.end,\n                id: e.id };\n            for (let k = ks + 1; k < ke; k++)\n                this.getSlot(k)[e.id] = {\n                    start: GCalendar.slotStartDate(k),\n                    end: GCalendar.slotEndDate(k),\n                    id: e.id };\n        }\n    }\n\n    removeEvent(e) {\n        let ks = GCalendar.dateToCacheKey(e.start);\n        let ke = GCalendar.dateToCacheKey(new Date(e.end.getTime() - 1));\n        for (let k = ks; k <= ke; k++)\n            delete this.getSlot(k)[e.id];\n    }\n\n    getSlotEvents(k, start, end) {\n        let s = this.getSlot(k);\n        let results = [];\n        for (let id in s) {\n            if (!(s[id].start >= end || s[id].end <= start))\n            {\n                let nstart = s[id].start < start ? start: s[id].start;\n                let nend = s[id].end > end ? end: s[id].end;\n                if (nstart > nend) console.log(s[id], start, end);\n                results.push({\n                    id,\n                    start: s[id].start < start ? start: s[id].start,\n                    end: s[id].end > end ? end: s[id].end\n                });\n            }\n        }\n        return results;\n    }\n\n    getCachedEvents(start, end) {\n        let ks = GCalendar.dateToCacheKey(start);\n        let ke = GCalendar.dateToCacheKey(new Date(end.getTime() - 1));\n        let results = this.getSlotEvents(ks, start, end);\n        for (let k = ks + 1; k < ke; k++)\n        {\n            let s = this.getSlot(k);\n            for (let id in s)\n                results.push(s[id]);\n        }\n        if (ke > ks)\n            results.push(...this.getSlotEvents(ke, start, end));\n        return results;\n    }\n\n    sync() {\n        return this.token.then(token => getEvents(this.calId, token, this.syncToken).then(r => {\n            this.syncToken = r.nextSyncToken;\n            let pm_results = r.results.map(e => e.start ? Promise.resolve(e) : getEvent(this.calId, e.id, token));\n            return Promise.all(pm_results).then(results => results.forEach(e => {\n                e.start = new Date(e.start.dateTime);\n                e.end = new Date(e.end.dateTime);\n                if (e.status === 'confirmed')\n                    this.addEvent(e);\n                else if (e.status === 'cancelled')\n                    this.removeEvent(e);\n            }));\n        })).catch(e => {\n            if (e == GApiError.invalidSyncToken) {\n                this.syncToken = '';\n                this.sync();\n            } else throw e;\n        });\n    }\n\n    getEvents(start, end) {\n        return this.sync().then(() => this.getCachedEvents(start, end));\n    }\n}\n","export class Pattern {\n    constructor(id, isRegex, value, label) {\n        this.id = id;\n        this.isRegex = isRegex;\n        this.value = value;\n        this.label = label;\n    }\n\n    get regex() { return new RegExp(this.isRegex ? this.value : `^${this.value}$`); }\n    get isEmpty() { return this.label === null; }\n    static emptyPattern = () => new Pattern(0, true, '', null);\n    static anyPattern = () => new Pattern('any', true, '.*', 'Any');\n}\n\nexport class PatternEntry {\n    constructor(name, idx, calPattern, eventPattern) {\n        this.name = name;\n        this.idx = idx;\n        this.cal = calPattern;\n        this.event = eventPattern;\n    }\n\n    static defaultPatternEntry = (idx) => new PatternEntry('', idx, Pattern.emptyPattern(), Pattern.anyPattern());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport cyan from '@material-ui/core/colors/cyan';\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\n\nconst styles = theme => ({\n    pieChart: {\n        margin: '0 auto',\n    }\n});\n\nfunction customizedLabel(props) {\n    const {cx, cy, x, y, fill, name} = props;\n    let anchor = \"middle\";\n    const EPS = 2;\n    let dx = 0;\n    let dy = 0;\n    if (x < cx - EPS) {\n        dx = -5;\n        anchor = \"end\"\n    } else if (x > cx + EPS) {\n        dx = 5;\n        anchor = \"start\";\n    }\n\n    if (y < cy - EPS) {\n        dy = -5;\n    } else if (y > cy + EPS) {\n        dy = 10;\n    }\n\n    return (<text x={x} y={y} dx={dx} dy={dy} fill={fill} textAnchor={anchor}>{`${name}`}</text>);\n}\n\nfunction ChromiclePieChart(props) {\n    return (\n    <Grid container spacing={0}>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.patternGraphData}\n               dataKey='value'\n               cx={200}\n               cy={125}\n               outerRadius={60}\n               fill={deepOrange[300]}\n               label={customizedLabel}/>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <div className={props.classes.patternTableWrapper}>\n        <PieChart width={400} height={250} className={props.classes.pieChart}>\n          <Pie data={props.calendarGraphData}\n               dataKey='value'\n               cx={200}\n               cy={125}\n               innerRadius={40}\n               outerRadius={70}\n               fill={cyan[300]}\n               label={customizedLabel}>\n            {props.calendarGraphData.map((d, i) => <Cell key={i} fill={d.color}/>)}\n          </Pie>\n          <Tooltip formatter={(value) => `${value.toFixed(2)} hr`}/>\n        </PieChart>\n        </div>\n      </Grid>\n    </Grid>);\n}\n\nChromiclePieChart.propTypes = {\n    patternGraphData: PropTypes.array.isRequired,\n    calendarGraphData: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(ChromiclePieChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Pattern } from './pattern';\n\nconst styles = theme => ({\n    fieldNoRegex: {\n        width: 200\n    },\n    fieldRegex: {\n        marginRight: '0.5em'\n    }\n});\n\nclass RegexField extends React.Component {\n    render() {\n        const { classes } = this.props;\n        let items = [];\n        var pitems = this.props.options;\n        const p0 = new Pattern.emptyPattern();\n        pitems[p0.id] = p0;\n        for (let id in pitems)\n        {\n            const label = !pitems[id].isEmpty ? pitems[id].label :\n                <span style={{color: this.props.theme.palette.primary.dark}}>Custom</span>;\n            items.push(<MenuItem key={id} value={id}>{label}</MenuItem>);\n        }\n        const selectOnClick = event => {\n            let value;\n            if (pitems[event.target.value].label == null) {\n                value = new Pattern(0, true,\n                    this.props.value.isRegex ?\n                    this.props.value.value :\n                    `^${this.props.value.value}$`, null);\n            } else {\n                value = pitems[event.target.value];\n            }\n            this.props.onChange({target: {value}});\n        };\n\n        const regexTextOnChange = event => this.props.onChange({\n            target: { value: new Pattern(0, true, event.target.value, null)}});\n\n        const className = this.props.value.isRegex ? classes.fieldRegex: classes.fieldNoRegex;\n        return (\n            <FormControl>\n                <span>\n                    <Select\n                        value={this.props.value.id}\n                        onChange={selectOnClick}\n                        className={className}>{items}\n                    </Select>\n                    {this.props.value.label == null && (\n                        <TextField\n                            value={this.props.value.value}\n                            onChange={regexTextOnChange} />\n                    )}\n                </span>\n            </FormControl>);\n    }\n}\n\nRegexField.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst RegexFieldWithStyles = withStyles(styles)(RegexField);\n\nexport function CalendarField(props) {\n    let options = {};\n    for (let id in props.cached.calendars) {\n        options[id] = new Pattern(id, false,\n            props.cached.calendars[id].name,\n            props.cached.calendars[id].name);\n    }\n    return (\n        <RegexFieldWithStyles\n            value={props.value}\n            options={options}\n            onChange={props.onChange}\n            theme={props.theme} />);\n}\n\nexport function EventField(props) {\n    let any = Pattern.anyPattern();\n    let options = {};\n    options[any.id] = any;\n    return (\n        <RegexFieldWithStyles\n            value={props.value}\n            options={options}\n            onChange={props.onChange}\n            theme={props.theme} />);\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: orange[300],\n            main: orange[500],\n            dark: orange[700],\n            contrastText: \"#fff\"\n        }\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { CalendarField, EventField } from './RegexField';\nimport theme from './theme';\n\nconst styles = theme => ({\n    deleteButtonShow: {\n        position: 'absolute',\n        right: 0,\n        height: 48\n    },\n    deleteButtonHide: {\n        display: 'none'\n    },\n    deleteIcon: {\n        height: '100%',\n        cursor: 'pointer'\n    },\n    patternTableWrapper: {\n        overflowX: 'auto',\n        overflowY: 'hidden'\n    },\n    patternTable: {\n        minWidth: 600\n    }\n});\n\nconst patternHead = [\n    {label: \"Name\", field: \"name\", elem: TextField},\n    {label: \"Calendar\", field: \"cal\", elem: withTheme(theme)(CalendarField)},\n    {label: \"Event\", field: 'event', elem: withTheme(theme)(EventField)}];\n\nclass PatternTable extends React.Component {\n    state = {\n        page: 0,\n        rowsPerPage: 5,\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    }\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    }\n\n    render() {\n        const { classes, cached, patterns } = this.props;\n        const { rowsPerPage, page } = this.state;\n        const nDummy = rowsPerPage - Math.min(rowsPerPage, patterns.length - page * rowsPerPage);\n        let rows = patterns.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map(p => (\n            <TableRow\n                onMouseOver={() => this.setState({ activePattern: p.idx })}\n                onMouseOut={() => this.setState({ activePattern: null })}>\n                {\n                    patternHead.map(s => {\n                        const CustomText = s.elem;\n                        return (\n                            <TableCell>\n                                <CustomText\n                                    value={p[s.field]}\n                                    cached={cached}\n                                    onChange={event => this.props.onUpdatePattern(s.field, p.idx, event.target.value)}/>\n                            </TableCell>)})\n                }\n                <span className={this.state.activePattern === p.idx ? classes.deleteButtonShow : classes.deleteButtonHide}>\n                    <DeleteOutlinedIcon\n                        className={classes.deleteIcon}\n                        onClick={() => this.props.onRemovePattern(p.idx)} />\n                </span>\n            </TableRow>));\n\n        return (\n            <div>\n                <div className={classes.patternTableWrapper}>\n                    <Table className={classes.patternTable}>\n                        <TableHead>\n                            <TableRow>{patternHead.map((s, i) => (<TableCell key={i}>{s.label}</TableCell>))}</TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows}\n                            {\n                                nDummy > 0 && (\n                                    <TableRow style={{ height: 48 * nDummy }}>\n                                        <TableCell colSpan={patternHead.length} />\n                                    </TableRow>)\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={patterns.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{'aria-label': 'Previous Page'}}\n                    nextIconButtonProps={{'aria-label': 'Next Page'}}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage} />\n            </div>);\n    }\n}\n\n\nPatternTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n    patterns: PropTypes.array.isRequired,\n    cached: PropTypes.object.isRequired,\n    onRemovePattern: PropTypes.func.isRequired,\n    onUpdatePattern: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(PatternTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'typeface-roboto';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker } from 'react-dates';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Logo from './Logo';\nimport * as gapi from './gapi';\nimport { Pattern, PatternEntry } from './pattern';\nimport PieChart from './Chart';\nimport PatternTable from './PatternTable';\nimport theme from './theme';\n\nconst default_chart_data = [\n    {name: 'Work', value: 10, color: cyan[300]},\n    {name: 'Wasted', value: 10, color: cyan[300]}];\n\nfunction filterPatterns(patterns, calName) {\n    return patterns.filter(p => {\n        return p.cal.regex.test(calName);\n    });\n}\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        height: '100vh',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    sectionTitle: {\n        flex: '0 0 auto'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        overflow: 'auto',\n    },\n    buttonSpacer: {\n        marginBottom: theme.spacing.unit * 4,\n    },\n    fab: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass Dashboard extends React.Component {\n    state = {\n        patterns: [],\n        timeRange: null,\n        token: gapi.getAuthToken(),\n        patternGraphData: default_chart_data,\n        calendarGraphData: default_chart_data,\n        activePattern: null\n    };\n\n    cached = {\n        calendars: {}\n    };\n\n    updatePattern = (field, idx, value) => {\n        let patterns = this.state.patterns;\n        patterns[idx][field] = value;\n        this.setState({ patterns });\n    };\n\n    removePattern = idx => {\n        let patterns = this.state.patterns;\n        patterns.splice(idx, 1);\n        for (let i = 0; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.setState({ patterns });\n    };\n\n    newPattern = () => {\n        let patterns = [PatternEntry.defaultPatternEntry(), ...this.state.patterns];\n        for (let i = 1; i < patterns.length; i++)\n            patterns[i].idx = i;\n        this.setState({ patterns });\n    };\n\n    analyze = () => {\n        if (!(this.state.startDate && this.state.endDate)) {\n            alert(\"Please choose a valid time range.\");\n            return;\n        }\n        let start = this.state.startDate.startOf('day').toDate();\n        let end = this.state.endDate.startOf('day').toDate();\n        console.log(start, end);\n        let event_pms = [];\n        for (let id in this.cached.calendars)\n            event_pms.push(this.cached.calendars[id].cal.getEvents(start, end)\n                .then(r => { return { id, events: r }; })\n                .catch(e => {\n                    console.log(`cannot load calendar ${id}`);\n                    return { id, events: [] };\n                }));\n\n        Promise.all(event_pms).then(all_events => {\n            let events = {};\n            let results = {}; // pattern idx => time\n            let cal_results = {}; // cal id => time\n            all_events.forEach(e => events[e.id] = e.events);\n            for (let i = 0; i < this.state.patterns.length; i++)\n                results[i] = 0;\n            for (let id in this.cached.calendars) {\n                if (!events[id]) continue;\n                let patterns = filterPatterns(this.state.patterns, this.cached.calendars[id].name);\n                events[id].forEach(event => {\n                    patterns.forEach(p => {\n                        if (!p.event.regex.test(event.summary)) return;\n                        if (!cal_results.hasOwnProperty(id)) {\n                            cal_results[id] = 0;\n                        }\n                        let duration = (event.end - event.start) / 60000;\n                        results[p.idx] += duration;\n                        cal_results[id] += duration;\n                    });\n                });\n            }\n            let patternGraphData = [];\n            let calendarGraphData = [];\n            for (let i = 0; i < this.state.patterns.length; i++) {\n                patternGraphData.push({ name: this.state.patterns[i].name, value: results[i] / 60.0 });\n            }\n            for (let id in cal_results) {\n                calendarGraphData.push({\n                    name: this.cached.calendars[id].name,\n                    value: (cal_results[id] / 60.0),\n                    color: this.cached.calendars[id].color.background});\n            }\n            //console.log(patternGraphData, calendarGraphData);\n            this.setState({ patternGraphData, calendarGraphData });\n        });\n    };\n\n    loadPatterns = () => {\n        let token = this.state.token;\n        let colors = token.then(gapi.getColors).then(color => {\n            return color.calendar;\n        });\n        let cals = token.then(gapi.getCalendars);\n        Promise.all([colors, cals]).then(([colors, items]) => {\n            items.forEach(item => {\n                this.cached.calendars[item.id] = {\n                    name: item.summary,\n                    color: colors[item.colorId],\n                    cal: new gapi.GCalendar(item.id, item.summary)\n                };\n            });\n            this.setState({ patterns: items.map((item, idx) => {\n                return new PatternEntry(item.summary, idx,\n                    new Pattern(item.id, false, item.summary, item.summary),\n                    Pattern.anyPattern());\n            })});\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <AppBar\n                        position=\"absolute\"\n                        className={classes.appBar}>\n                        <Toolbar className={classes.toolbar}>\n                            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                <Logo style={{width: '2em', verticalAlign: 'bottom', marginRight: '0.2em'}}/>Chromicle\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <main className={classes.content}>\n                        <div className={classes.appBarSpacer} />\n                        <Grid container  spacing={16}>\n                            <CssBaseline />\n                            <Grid item md={6} xs={12}>\n                                <FormControl fullWidth={true}>\n                                    <FormGroup>\n                                        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                                            Event Patterns\n                                            <IconButton\n                                                style={{marginBottom: '0.12em', marginLeft: '0.5em'}}\n                                                onClick={() => this.newPattern()}><AddCircleIcon /></IconButton>\n                                        </Typography>\n                                        <PatternTable\n                                            patterns={this.state.patterns}\n                                            cached={this.cached}\n                                            onRemovePattern={this.removePattern}\n                                            onUpdatePattern={this.updatePattern} />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                                            Time Range\n                                        </Typography>\n                                        <div style={{textAlign: 'center'}}>\n                                            <DateRangePicker\n                                                startDate={this.state.startDate}\n                                                startDateId=\"start_date_id\"\n                                                endDate={this.state.endDate}\n                                                endDateId=\"end_date_id\"\n                                                onDatesChange={({ startDate, endDate }) => {\n                                                    this.setState({ startDate, endDate });\n                                                }} \n                                                focusedInput={this.state.focusedInput}\n                                                onFocusChange={focusedInput => this.setState({ focusedInput })}\n                                                isOutsideRange={() => false}/>\n                                        </div>\n                                    </FormGroup>\n                                    <div className={classes.buttonSpacer} />\n                                    <Grid container spacing={16}>\n                                        <Grid item md={6} xs={12}>\n                                            <FormGroup>\n                                                <Button variant=\"contained\" color=\"primary\" onClick={this.loadPatterns}>Load</Button>\n                                            </FormGroup>\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            <FormGroup>\n                                                <Button variant=\"contained\" color=\"primary\" onClick={this.analyze}>Analyze</Button>\n                                            </FormGroup>\n                                        </Grid>\n                                    </Grid>\n                                </FormControl>\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                                <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n                                    Graph\n                                </Typography>\n                                <PieChart\n                                    patternGraphData={this.state.patternGraphData}\n                                    calendarGraphData={this.state.calendarGraphData}/>\n                            </Grid>\n                        </Grid>\n                    </main>\n                </div>\n            </MuiThemeProvider>);\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}